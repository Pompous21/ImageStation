package ${package.Controller};

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.yy.ImageStation.common.Constants;
import com.yy.ImageStation.common.Result;
import org.springframework.web.bind.annotation.*;

import $!{package.Service}.$!{table.serviceName};
import ${package.Entity}.${entity};

import javax.annotation.Resource;
import java.util.List;

#if(${restControllerStyle})
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    // 新增、修改
    @PostMapping
    public Result save(@RequestBody ${entity} ${table.entityPath}) {
        if (${table.entityPath}Service.saveOrUpdate(${table.entityPath})) return Result.success(Constants.CODE_5000);
        else return Result.error(Constants.CODE_5001);
    }

    // 删除
    @DeleteMapping("/{id}")
    public Result delete(@PathVariable Integer id) {        // 删除单个 - 根据id
        if (${table.entityPath}Service.removeById(id)) return Result.success(Constants.CODE_5100);
        else return Result.error(Constants.CODE_5101);
    }

    @PostMapping("/del/batch")
    public Result deleteBatch(@RequestBody List<Integer> ids) {     // 批量删除
        if (${table.entityPath}Service.removeBatchByIds(ids)) return Result.success(Constants.CODE_5100);
        else return Result.error(Constants.CODE_5101);
    }

    // 查询
    @GetMapping
    public Result findAll() {       // 查询全部
        return Result.success(${table.entityPath}Service.list());
    }

    @GetMapping("/{id}")
    public Result findOne(@PathVariable Integer id) {       // 查询单个 - 根据id
        return Result.success(${table.entityPath}Service.getById(id));
    }

    @GetMapping("/page")
    public Result findPage(@RequestParam Integer pageNum,
                        @RequestParam Integer pageSize) {
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper<>();
        queryWrapper.orderByDesc("id");
        return Result.success(${table.entityPath}Service.page(new Page<>(pageNum, pageSize), queryWrapper));
    }

}

#end